module Z

def int aa1[0..9]
def 0..9 aa2

def bool oy[char[]]
def int myInt
def bool mySet[myInt]
def System.void blah
def int [][] blaahhh
def int blooh [char][bool]
def void set[0..9]
# def [0..9] digit
def bool yopt[str]
def int intr[..]
def typeref mytr

var int a = 0
var int d[..] = 0..1
var char f = 'a'
const int g = 922337
const glarge = 9223372036854775807L
const h = 'h'
const i = '\x00'
const j = h
const dc = 'a'..j
const dd = 0..2
# const int int = 1
const ref = int[char]
const 0..2 new1 = 1
const str s = 'a'
const s1 = 'b'
const s2 = 'abc'
const a3 = 1 != 2
const a4 = 1L < 9223372036854775806L
const a5 = glarge > 9223372036854775806L
const a8 = 'ab' > 'abc'
const a9 = s1 == 'b'
const a10 = 'b' == s1

const a6 = 'abc' == 'a'
const a7 = 'b' != 'def'
const typeof(h) h1 = 'a'
const typeof(h1) h2 = 'b'
const h3 = typeof(h2)
const typeref h4 = int

const t1 = int('A')
const t2 = int(1000000000000000000L)
const t3 = large(1)
const t4 = 1000000000000000000L

const b4 = false
const b5 = int(true)
const b6 = bool(1)
const b7 = false..true
const false..true b8 = bool('\x00')

def enum e1(C1, C2, C3)
const e2 = C2
const C2..C3 e3 = e1(1)
const C1..C2 e4 = e3

const enum e5(C5, C6, C7) = C6

const hex1 = 0x7A00000000000000L
const v = null

const b1 = 0L < 2L
const b2 = bool(1)

const o1 = 1 + 2 * 3
const o2 = 1L + 3L
const o3 = 1 or 4 - (o1 + int(o2))
const o4 = -9 / 2
const o5 = 0x10 shr 1

const f1 = true or true and false
const f2 = true xor 0 < 1 xor true
const f3 = ((1 or 2 or 4) shl 1) == 14
const f4 = not true and false
const int f5 = not 1 and 2
const f6 = (not 0L and 0x7f00000000000000L) == 0x7f00000000000000L

def enum days(Mon, Tue, Wed)
const int aa[] = 1
const aa3 = aa | 2 | 3
const days aa4[] = Mon | Tue | Wed

const u2 = 'abc' | 'def'
const u3 = '@' | 'abc' | 'def' | 'g'
const u4 = 'x' | 'y' | 'z!'
const u5 = ''

const int u6[] = []
const u7 = u6 == []
const u8 = 1 | 2 | 3 + 5
const u9 = u8 == [1, 2, 3 + 5]

# const j1 = null | null
# const void j2[] = null
def int intv[]
const int u10[] = [1, 2, 3] | intv([4, 5, 6])
def 0..3 nums
const nums num = 1
const u11 = intv([])
const u12 = u11
const nums nv[] = [1, 2, 3]
# const nums nv[] = [1, 2, 4]

const ss0_2 = sizeof(0..2)
const ssnums = sizeof(nums)
const ssint = sizeof(int)
const sslarge = sizeof(large)
const sschar = sizeof(char)
const ssptr = sizeof(str)
